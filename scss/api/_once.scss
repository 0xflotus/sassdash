
@function __once($function) {
    @return __before($function, 2);
}

/// 
/// Creates a function that is restricted to invoking `func` once. Repeat calls
/// to the function return the value of the first call. The `func` is invoked
/// with the `this` binding of the created function.
/// @static
/// @memberOf _
/// @category Function
/// @param {Function} func The function to restrict.
/// @returns {Function} Returns the new restricted function.
/// @example
/// var initialize = _once(createApplication);
/// initialize();
/// initialize();
/// // `initialize` invokes `createApplication` once
/// 
@function _once($args...) { @return call(__once, $args...); }
