@function __is-length($value) {
    @return type-of($value) == 'number'
    and $value > -1
    and $value % 1 == 0
    and $value < (pow(2, 53) - 1);
}


@function __is-strict-comparable($value) {
    @return not __is-map-like($value);
}


@function __is-iteratee-call($value: null, $index: null, $map: null, $args...) {
    @if not __is-map-like($map)
    or length($args) > 0 {
        @return false;
    }

    $type: type-of($index);
    $prereq: false;

    @if ($type == 'number') {
        $length: length($map);
        $prereq: (__is-length($length) and __is-index($index, $length));
    } @else {
        $prereq: ($type == 'string');
    }

    @return if($prereq, __get($map, $index) == $value, false);
}


@function __is-arglist($value, $args...) {
    @return type-of($value) == 'arglist';
}


@function __is-list($value, $args...) {
    @return type-of($value) == 'list';
}


@function __is-boolean($value, $args...) {
    @return type-of($value) == 'bool';
}


@function __is-falsey($value) {
    @if $value == null
    or $value == ''
    or $value == ""
    or $value == $__undefined__
    or $value == 0
    or not $value {
        @return true;
    }

    @return false;
}


@function __is-truthy($value) {
    @return $value and not __is-falsey($value);
}


@function __is-finite($value, $args...) {
    @return __is-number($value);
}


@function __is-function($value, $args...) {
    @return __function-exists($value);
}


@function __is-map($value, $args...) {
    @return type-of($value) == 'map';
}


@function __is-null($value, $args...) {
    @return type-of($value) == 'null';
}


@function __is-number($value, $args...) {
    @return type-of($value) == 'number';
}


@function __is-integer($value, $args...) {
    @return __is-number($value) and round($value) == $value;
}


@function __is-plain-map($value, $args...) {
    @return (type-of($value) == 'map')
    and not (map-has-key($value, '_constructor'));
}


@function __is-string($value, $args...) {
    @return type-of($value) == 'string';
}


@function __is-undefined($value, $args...) {
    @return if(global-variable-exists('__undefined__'), $value == $__undefined__, false);
}


@function __is-index($value, $length: null) {
    $value: __parse-float($value);

    @return $value > 0
    and $value % 1 == 0
    and ($length == null or $value <= $length);
}


@function __is-iterable($value, $args...) {
    @return __is-map-like($value) or __is-string($value);
}


@function __is-map-like($value, $args...) {
    @return $value and (index('map' 'list' 'arglist', type-of($value)));
}


@function __is-list-like($value, $args...) {
    @return __is-list($value) or __is-arglist($value);
}


@function __is-native($value, $args...) {
    @return __is-function($value) and index(__const('NATIVE_FUNCTIONS'), $value);
}


@function __is-color($value, $args...) {
    @return type-of($value) == 'color';
}


@function _is-arglist($args...) {
    @return call('__is-arglist', $args...);
}


@function _is-list($args...) {
    @return call('__is-list', $args...);
}


@function _is-boolean($args...) {
    @return call('__is-boolean', $args...);
}


@function _is-finite($args...) {
    @return call('__is-finite', $args...);
}


@function _is-function($args...) {
    @return call('__is-function', $args...);
}


@function _is-null($args...) {
    @return call('__is-null', $args...);
}


@function _is-number($args...) {
    @return call('__is-number', $args...);
}


@function _is-integer($args...) {
    @return call('__is-integer', $args...);
}


@function _is-map($args...) {
    @return call('__is-map', $args...);
}


@function _is-plain-map($args...) {
    @return call('__is-plain-map', $args...);
}


@function _is-string($args...) {
    @return call('__is-string', $args...);
}


@function _is-undefined($args...) {
    @return call('__is-undefined', $args...);
}


@function _is-index($args...) {
    @return call('__is-index', $args...);
}


@function _is-iterable($args...) {
    @return call('__is-iterable', $args...);
}


@function _is-map-like($args...) {
    @return call('__is-map-like', $args...);
}


@function _is-list-like($args...) {
    @return call('__is-list-like', $args...);
}


@function _is-color($args...) {
    @return call('__is-color', $args...);
}
