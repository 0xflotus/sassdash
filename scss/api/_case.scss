
@function __camel-case-compounder($result, $word, $index) {
    $word: to-lower-case($word);

    @return if($index > 1,
        $result + to-upper-case(__char-at($word, 1)) + str-slice($word, 2),
        $word);
}
@function __camel-case($arguments...) {
    $compounder: __create-compounder(__camel-case-compounder);

    @return __exec($compounder, $arguments...);
}

@function __capitalize($string) {
    $string: __base-to-string($string);

    @return if(str-length($string) > 0,
        to-upper-case(__char-at($string, 1)) + str-slice($string, 2),
        false);
}

/**
 * Converts `string` to camel case.
 * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.
 *
 * @static
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar');
 * // => 'fooBar'
 *
 * _.camelCase('__foo_bar__');
 * // => 'fooBar'
 */
@function _camel-case($args...) { @return call(__camel-case, $args...); }

/**
 * Capitalizes the first character of `string`.
 *
 * @static
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('fred');
 * // => 'Fred'
 */
@function _capitalize($args...) { @return call(__capitalize, $args...); }
