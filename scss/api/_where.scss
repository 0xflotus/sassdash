

@function __where($collection, $source) {
    @return __filter($collection, __matches($source));
}

/// 
/// Performs a deep comparison between each element in `collection` and the
/// source object, returning an array of all elements that have equivalent
/// property values.
/// **Note:** This method supports comparing arrays, booleans, `Date` objects,
/// numbers, `Object` objects, regexes, and strings. Objects are compared by
/// their own, not inherited, enumerable properties. For comparing a single
/// own or inherited property value see `_matches-property`.
///
/// 
/// @group Collection
/// @param {Array|Object|string} collection The collection to search.
/// @param {Object} source The object of property values to match.
/// @returns {Array} Returns the new filtered array.
/// @example scss
/// var users = [
///   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ('hoppy') },
///   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ('baby puss', 'dino') }
/// ];
/// _pluck(_where(users, { 'age': 36, 'active': false }), 'user');
/// // => ('barney')
/// _pluck(_where(users, { 'pets': ('dino') }), 'user');
/// // => ('fred')
/// 
@function _where($args...) { @return call(__where, $args...); }
