
@function __base-fill($list, $value, $start: null, $end: null) {
    $length: length($list);

    $start: if($start == null,
        1,
        if(__is-number($start), $start, if($start, 2, 1)));

    $end: if(__is-undefined($end) or $end > $length,
        $length,
        if(__is-number($end), $end, if($end, 2, 1)));

    @if ($end < 1) {
        $end: $end + $length;
    }

    $length: if($start > $end, 0, $end);

    @for $start from $start through $length {
        $list: set-nth($list, $start, $value);
    }

    @return $list;
}

@function __fill($list, $value, $start: null, $end: null) {
    $length: if($list, length($list), 0);

    @if not ($length) {
        @return ();
    }

    @if $start
        and __is-number($start)
        and __is-iteratee-call($list, $value, $start)
    {
        $start: 1;
        $end: $length;
    }

    @return __base-fill($list, $value, $start, $end);
}

/// 
/// Fills elements of `array` with `value` from `start` up to, but not
/// including, `end`.
/// **Note:** This method mutates `array`.
/// @static
/// @memberOf _
/// @category Array
/// @param {Array} array The array to fill.
/// @param {*} value The value to fill `array` with.
/// @param {number} (start=0) The start position.
/// @param {number} (end=array.length) The end position.
/// @returns {Array} Returns `array`.
/// 
@function _fill($args...) { @return call(__fill, $args...); }
