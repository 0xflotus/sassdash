


@function __base-difference($list, $values) {
    $result: ();

    @each $item in $list {
        @if not index($values, $item) {
            $result: append($result, $item);
        }
    }

    @return $result;
}

@function __difference($arguments...) {
    $index: 1;
    $length: length($arguments);
    $value: null;

    $break: false;
    @while ($index <= $length and not $break) {
        $value: nth($arguments, $index);

        @if __is-list-like($value) {
            $break: true;
        } @else {
            $index: $index + 1;
        }
    }

    $values: __base-flatten($arguments, false, true, $index + 1);

    @return __base-difference($value, $values);
}

/// 
/// Creates an list excluding all values of the provided lists using
/// `SameValueZero` for equality comparisons.
/// **Note:** `SameValueZero` comparisons are like strict equality comparisons,
/// e.g. `===`, except that `NaN` matches `NaN`. See the
/// [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)
/// for more details.
///
/// 
/// @group Array
/// @param {Array} list The list to inspect.
/// @param {...Array} (values) The lists of values to exclude.
/// @returns {Array} Returns the new list of filtered values.
/// @example scss
/// _difference((1, 2, 3), (4, 2));
/// // => (1, 3)
/// 
@function _difference($args...) { @return call(__difference, $args...); }
