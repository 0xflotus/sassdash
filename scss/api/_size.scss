

@function __size($collection: null, $args...) {
    @if __is-string($collection) {
        $collection: __to-list($collection);
    }

    $length: if(__is-map-like($collection), length($collection), 0);

    @return if(__is-length($length), $length, length(__keys($collection)));
}
/// 
/// Gets the size of `collection` by returning `collection.length` for
/// array-like values or the number of own enumerable properties for objects.
/// /// @static
/// @memberOf _
/// @category Collection
/// @param {Array|Object|string} collection The collection to inspect.
/// @returns {number} Returns the size of `collection`.
/// @example
/// /// _size((1, 2, 3));
/// // => 3
/// /// _size({ 'a': 1, 'b': 2 });
/// // => 2
/// /// _size('pebbles');
/// // => 7
/// 
@function _size($args...) { @return call(__size, $args...); }
