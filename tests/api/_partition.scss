@include test-module('Sassdash') {
  @include test('_partition') {
    $list: 1 0 1;

    @include assert-true(test-lists-equal(_partition((), _identity), ((), ())),
      'should return two groups of elements');

    @include assert-true(test-lists-equal(_partition($list, _constant(true)), ($list, ())),
      'should return two groups of elements');

    @include assert-true(test-lists-equal(_partition($list, _constant(false)), ((), $list)),
      'should return two groups of elements');

    $expected: (1 1), (0,);

    @include assert-true(test-lists-equal(_partition($list, null), $expected),
      'should use _identity when predicate is nullish');

    @include assert-true(test-lists-equal(_partition($list), $expected),
      'should use _identity when predicate is nullish');

    // todo: should support the this-arg argument

    $maps: (('a': 1), ('a': 1), ('b': 2));
    $expected: _slice($maps, 0, 2), _slice($maps, 2);

    @include assert-true(test-lists-equal(_partition($maps, 'a'), $expected),
      'should work with a _pluck style predicate');

    $list: (1 0, 0 1, 1 0);
    $expected: ((1 0, 1 0), (0 1,));

    @include assert-true(test-lists-equal(_partition($list, 1), $expected),
      'should work with a number for predicate');

    $map: ('a': 1.1, 'b': 0.2, 'c': 1.3);

    @include assert-true(test-lists-equal(_partition($map, test-floor), ((1.1, 1.3), (0.2,))),
      'should work with map for collection');
  }
}